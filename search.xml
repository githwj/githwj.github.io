<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>培训总结</title>
    <url>/2021/12/03/%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="1-你认为培训目的是什么？"><a href="#1-你认为培训目的是什么？" class="headerlink" title="1.你认为培训目的是什么？"></a>1.你认为培训目的是什么？</h1><p>个人认为培训的目的主要有两个方面</p>
<ul>
<li> 一是为了帮助是同事尽快熟悉平台框架，尽快投入工作状态</li>
<li> 二是掌握更多技能，适应项目技术栈的变更，为后期项目迁移做好准备</li>
</ul>
<h1 id="2-使用学习资料时（前端准备手册-服务端环境搭建指南），是否有疑问，问题是什么？根据步骤，能不能完成环境搭建？"><a href="#2-使用学习资料时（前端准备手册-服务端环境搭建指南），是否有疑问，问题是什么？根据步骤，能不能完成环境搭建？" class="headerlink" title="2.使用学习资料时（前端准备手册/服务端环境搭建指南），是否有疑问，问题是什么？根据步骤，能不能完成环境搭建？"></a>2.使用学习资料时（前端准备手册/服务端环境搭建指南），是否有疑问，问题是什么？根据步骤，能不能完成环境搭建？</h1><ol>
<li>前端<ul>
<li>前端搭建环境相对简单，搭建过程中基本不会遇到问题</li>
<li>在实际过程中，关于mock的配置过程并未加入在2.0课程中（我不确定了），导致后面做练习题会有相关疑问</li>
</ul>
</li>
<li>服务端<ul>
<li>文档相对不是很详细，导致大家后期会反复出现相同的问题</li>
<li>根据文档还是可以完成搭建环境，但是有些细节的地方，容易疏忽，文档没有特别强调</li>
</ul>
</li>
</ol>
<h1 id="3-课程涉及的技术，你是不是原本就掌握了？有没有学习选修课，对你有帮助吗？对课程有什么建议？"><a href="#3-课程涉及的技术，你是不是原本就掌握了？有没有学习选修课，对你有帮助吗？对课程有什么建议？" class="headerlink" title="3.课程涉及的技术，你是不是原本就掌握了？有没有学习选修课，对你有帮助吗？对课程有什么建议？"></a>3.课程涉及的技术，你是不是原本就掌握了？有没有学习选修课，对你有帮助吗？对课程有什么建议？</h1><p>课程所及的技术是有所掌握，但是项目的原因，实际工作并未使用到，特别感谢这次培训，平台框架帮助我们减少了很多重复性工作，通过模板，可以更快完成功能实现</p>
<p>选修课有看过，本来对es6感兴趣，以前也自学过一点，但不是很系统，但es6的课程时长稍微有点点长，可否拆分一下</p>
<h1 id="4-考试时（客观题及主观题），是否遇到问题？能否快速理解题意？"><a href="#4-考试时（客观题及主观题），是否遇到问题？能否快速理解题意？" class="headerlink" title="4.考试时（客观题及主观题），是否遇到问题？能否快速理解题意？"></a>4.考试时（客观题及主观题），是否遇到问题？能否快速理解题意？</h1><p>基本没有什么问题</p>
<h1 id="5-对课程学习时长、考试时长有什么建议？"><a href="#5-对课程学习时长、考试时长有什么建议？" class="headerlink" title="5.对课程学习时长、考试时长有什么建议？"></a>5.对课程学习时长、考试时长有什么建议？</h1><p>前端的话，针对开始的学习内容相对精简</p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>web 全栈工程师的自我修养</title>
    <url>/2021/11/29/notes/</url>
    <content><![CDATA[<h1 id="web-全栈工程师的自我修养"><a href="#web-全栈工程师的自我修养" class="headerlink" title="web 全栈工程师的自我修养"></a>web 全栈工程师的自我修养</h1><h2 id="相关书籍"><a href="#相关书籍" class="headerlink" title="相关书籍"></a>相关书籍</h2><ul>
<li>写给大家看的设计书</li>
<li>Dribbble</li>
</ul>
<h2 id="2021年11月27日"><a href="#2021年11月27日" class="headerlink" title="2021年11月27日"></a>2021年11月27日</h2><h3 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h3><h4 id="web-性能优化"><a href="#web-性能优化" class="headerlink" title="web 性能优化"></a>web 性能优化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•压缩源码和图片</span><br><span class="line">JavaScript文件源代码可以采用混淆压缩的方式，CSS文件源代码进行普通压缩，JPG图片可以根据具体质量来压缩为50%到70%, PNG可以使用一些开源压缩软件来压缩，比如24色变成8色、去掉一些PNG格式信息等。</span><br><span class="line"></span><br><span class="line">•选择合适的图片格式</span><br><span class="line">如果图片颜色数较多就使用JPG格式，如果图片颜色数较少就使用PNG格式，如果能够通过服务器端判断浏览器支持WebP，那么就使用WebP格式和SVG格式。</span><br><span class="line"></span><br><span class="line">•合并静态资源</span><br><span class="line">包括CSS、JavaScript和小图片，减少HTTP请求。</span><br><span class="line"></span><br><span class="line">•开启服务器端的Gzip压缩</span><br><span class="line">这对文本资源非常有效，对图片资源则没那么大的压缩比率。</span><br><span class="line"></span><br><span class="line">•使用CDN</span><br><span class="line">或者一些公开库使用第三方提供的静态资源地址（比如jQuery、normalize.css）。一方面增加并发下载量，另一方面能够和其他网站共享缓存。</span><br><span class="line"></span><br><span class="line">•延长静态资源缓存时间</span><br><span class="line">这样，频繁访问网站的访客就能够更快地访问。不过，这里要通过修改文件名的方式，确保在资源更新的时候，用户会拉取到最新的内容。</span><br><span class="line"></span><br><span class="line">•把CSS放在页面头部，把JavaScript放在页面底部</span><br><span class="line">这样就不会阻塞页面渲染，让页面出现长时间的空白。每一个条目都可以进一步深层挖掘下去。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h3>]]></content>
      <categories>
        <category>分类测试</category>
      </categories>
      <tags>
        <tag>标签测试</tag>
      </tags>
  </entry>
</search>
